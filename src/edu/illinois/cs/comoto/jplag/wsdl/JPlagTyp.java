/*
 * University of Illinois/NCSA
 * Open Source License
 *
 * Copyright (c) 2012 University of Illinois at Urbana-Champaign.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal with the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimers.
 *
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimers in the documentation and/or other materials provided
 *       with the distribution.
 *
 *     * Neither the names of the CoMoTo Project team, the University of
 *       Illinois at Urbana-Champaign, nor the names of its contributors
 *       may be used to endorse or promote products derived from this
 *       Software without specific prior written permission.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package edu.illinois.cs.comoto.jplag.wsdl;

public interface JPlagTyp extends java.rmi.Remote {
    public edu.illinois.cs.comoto.jplag.wsdl.ServerInfo getServerInfo() throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public java.lang.String compareSource(edu.illinois.cs.comoto.jplag.wsdl.Option arguments, javax.mail.internet.MimeMultipart inputZipFile) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public java.lang.String startSubmissionUpload(edu.illinois.cs.comoto.jplag.wsdl.StartSubmissionUploadParams params) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int continueSubmissionUpload(byte[] data) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public edu.illinois.cs.comoto.jplag.wsdl.Status getStatus(java.lang.String submissionID) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public javax.mail.internet.MimeMultipart getResult(java.lang.String submissionID) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public edu.illinois.cs.comoto.jplag.wsdl.StartResultDownloadData startResultDownload(java.lang.String submissionID) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public byte[] continueResultDownload(int dummy) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int cancelSubmission(java.lang.String submissionID) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int updateUserInfo(edu.illinois.cs.comoto.jplag.wsdl.UpdateUserInfoParams params) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public edu.illinois.cs.comoto.jplag.wsdl.UserDataArray getUserDataArray(int dummy) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int setUserData(edu.illinois.cs.comoto.jplag.wsdl.SetUserDataParams params) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public boolean requestAccount(edu.illinois.cs.comoto.jplag.wsdl.RequestData params) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public edu.illinois.cs.comoto.jplag.wsdl.RequestDataArray getAccountRequests(boolean lengthOnly) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int finishAccountRequest(edu.illinois.cs.comoto.jplag.wsdl.FinishRequestData finishData) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int extendAccount(java.lang.String extendCode) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public edu.illinois.cs.comoto.jplag.wsdl.MailTemplateArray getMailTemplates(int type) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int setMailTemplate(edu.illinois.cs.comoto.jplag.wsdl.SetMailTemplateParams params) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int notifyDevelopers(edu.illinois.cs.comoto.jplag.wsdl.NotifyDevelopersParams params) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;

    public int setDeveloperState(edu.illinois.cs.comoto.jplag.wsdl.SetDeveloperStateParams params) throws
            edu.illinois.cs.comoto.jplag.wsdl.JPlagException, java.rmi.RemoteException;
}
