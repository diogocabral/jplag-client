/*
 * University of Illinois/NCSA
 * Open Source License
 *
 * Copyright (c) 2012 University of Illinois at Urbana-Champaign.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal with the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimers.
 *
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimers in the documentation and/or other materials provided
 *       with the distribution.
 *
 *     * Neither the names of the CoMoTo Project team, the University of
 *       Illinois at Urbana-Champaign, nor the names of its contributors
 *       may be used to endorse or promote products derived from this
 *       Software without specific prior written permission.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package edu.illinois.cs.comoto.jplag.wsdl;


public class Option {
    protected java.lang.String language;
    protected java.lang.Integer comparisonMode;
    protected int minimumMatchLength;
    protected java.lang.String[] suffixes;
    protected boolean readSubdirs;
    protected java.lang.String pathToFiles;
    protected java.lang.String basecodeDir;
    protected java.lang.String storeMatches;
    protected java.lang.String clustertype;
    protected java.lang.String countryLang;
    protected java.lang.String title;
    protected java.lang.String originalDir;

    public Option() {
    }

    public Option(java.lang.String language, java.lang.Integer comparisonMode, int minimumMatchLength, java.lang.String[] suffixes, boolean readSubdirs, java.lang.String pathToFiles, java.lang.String basecodeDir, java.lang.String storeMatches, java.lang.String clustertype, java.lang.String countryLang, java.lang.String title, java.lang.String originalDir) {
        this.language = language;
        this.comparisonMode = comparisonMode;
        this.minimumMatchLength = minimumMatchLength;
        this.suffixes = suffixes;
        this.readSubdirs = readSubdirs;
        this.pathToFiles = pathToFiles;
        this.basecodeDir = basecodeDir;
        this.storeMatches = storeMatches;
        this.clustertype = clustertype;
        this.countryLang = countryLang;
        this.title = title;
        this.originalDir = originalDir;
    }

    public java.lang.String getLanguage() {
        return language;
    }

    public void setLanguage(java.lang.String language) {
        this.language = language;
    }

    public java.lang.Integer getComparisonMode() {
        return comparisonMode;
    }

    public void setComparisonMode(java.lang.Integer comparisonMode) {
        this.comparisonMode = comparisonMode;
    }

    public int getMinimumMatchLength() {
        return minimumMatchLength;
    }

    public void setMinimumMatchLength(int minimumMatchLength) {
        this.minimumMatchLength = minimumMatchLength;
    }

    public java.lang.String[] getSuffixes() {
        return suffixes;
    }

    public void setSuffixes(java.lang.String[] suffixes) {
        this.suffixes = suffixes;
    }

    public boolean isReadSubdirs() {
        return readSubdirs;
    }

    public void setReadSubdirs(boolean readSubdirs) {
        this.readSubdirs = readSubdirs;
    }

    public java.lang.String getPathToFiles() {
        return pathToFiles;
    }

    public void setPathToFiles(java.lang.String pathToFiles) {
        this.pathToFiles = pathToFiles;
    }

    public java.lang.String getBasecodeDir() {
        return basecodeDir;
    }

    public void setBasecodeDir(java.lang.String basecodeDir) {
        this.basecodeDir = basecodeDir;
    }

    public java.lang.String getStoreMatches() {
        return storeMatches;
    }

    public void setStoreMatches(java.lang.String storeMatches) {
        this.storeMatches = storeMatches;
    }

    public java.lang.String getClustertype() {
        return clustertype;
    }

    public void setClustertype(java.lang.String clustertype) {
        this.clustertype = clustertype;
    }

    public java.lang.String getCountryLang() {
        return countryLang;
    }

    public void setCountryLang(java.lang.String countryLang) {
        this.countryLang = countryLang;
    }

    public java.lang.String getTitle() {
        return title;
    }

    public void setTitle(java.lang.String title) {
        this.title = title;
    }

    public java.lang.String getOriginalDir() {
        return originalDir;
    }

    public void setOriginalDir(java.lang.String originalDir) {
        this.originalDir = originalDir;
    }
}
